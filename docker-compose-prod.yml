version: '3.7'
services:

  db:
    container_name: db  
    image: postgres:alpine
    environment:
      POSTGRES_DB: ${DB_NAME}     
      POSTGRES_USER: ${DB_USER}     
      POSTGRES_PASSWORD: ${DB_PASSWORD} 
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    restart: always
    command: redis-server --save 60 1 --loglevel warning
    depends_on:
      - db

  backend:
    build: .
    container_name: "backend"
    command: gunicorn -b 0.0.0.0:8000 core.wsgi --timeout 60
    restart: "always"    
    volumes:
      - ./core:/app
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - "8000"
    environment:
      - SECRET_KEY=test
      - DEBUG=False
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
      - redis

  nginx:
    image: nginx
    container_name: nginx
    restart: "always" 
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    depends_on:
      - redis
      - db
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume: